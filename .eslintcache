[{"/home/alejandro/ecommerces-react/tumercial/src/index.js":"1","/home/alejandro/ecommerces-react/tumercial/src/App.js":"2","/home/alejandro/ecommerces-react/tumercial/src/components/Products/Products.jsx":"3","/home/alejandro/ecommerces-react/tumercial/src/components/Products/Product/Product.jsx":"4","/home/alejandro/ecommerces-react/tumercial/src/components/Navbar/Navbar.jsx":"5","/home/alejandro/ecommerces-react/tumercial/src/components/Navbar/styles.js":"6","/home/alejandro/ecommerces-react/tumercial/src/components/index.js":"7","/home/alejandro/ecommerces-react/tumercial/src/lib/commerce.js":"8","/home/alejandro/ecommerces-react/tumercial/src/components/Cart/Cart.jsx":"9","/home/alejandro/ecommerces-react/tumercial/src/components/Cart/styles.js":"10","/home/alejandro/ecommerces-react/tumercial/src/components/Products/Product/styles.js":"11","/home/alejandro/ecommerces-react/tumercial/src/components/Products/styles.js":"12","/home/alejandro/ecommerces-react/tumercial/src/components/Cart/CartItem/CartItem.jsx":"13","/home/alejandro/ecommerces-react/tumercial/src/components/Cart/CartItem/styles.js":"14","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/Checkout/styles.js":"16","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/AddressForm.jsx":"17","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/PaymentForm.jsx":"18","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/FormInput.jsx":"19","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/Review.jsx":"20"},{"size":143,"mtime":1607371542334,"results":"21","hashOfConfig":"22"},{"size":2941,"mtime":1607982504573,"results":"23","hashOfConfig":"22"},{"size":860,"mtime":1607643082372,"results":"24","hashOfConfig":"22"},{"size":1411,"mtime":1607643059191,"results":"25","hashOfConfig":"22"},{"size":1587,"mtime":1607684686476,"results":"26","hashOfConfig":"22"},{"size":1564,"mtime":1607466774972,"results":"27","hashOfConfig":"22"},{"size":230,"mtime":1607785248616,"results":"28","hashOfConfig":"22"},{"size":125,"mtime":1607470945221,"results":"29","hashOfConfig":"22"},{"size":1924,"mtime":1607785500493,"results":"30","hashOfConfig":"22"},{"size":569,"mtime":1607643128720,"results":"31","hashOfConfig":"22"},{"size":395,"mtime":1607643001559,"results":"32","hashOfConfig":"22"},{"size":286,"mtime":1607643049664,"results":"33","hashOfConfig":"22"},{"size":1368,"mtime":1607809880078,"results":"34","hashOfConfig":"22"},{"size":332,"mtime":1607683019738,"results":"35","hashOfConfig":"22"},{"size":2454,"mtime":1607982420907,"results":"36","hashOfConfig":"22"},{"size":1157,"mtime":1607784857174,"results":"37","hashOfConfig":"22"},{"size":5319,"mtime":1607864017034,"results":"38","hashOfConfig":"22"},{"size":2924,"mtime":1607982464096,"results":"39","hashOfConfig":"22"},{"size":509,"mtime":1607807712918,"results":"40","hashOfConfig":"22"},{"size":1087,"mtime":1607900191219,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ua7w6p",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/alejandro/ecommerces-react/tumercial/src/index.js",[],["86","87"],"/home/alejandro/ecommerces-react/tumercial/src/App.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Products/Products.jsx",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Products/Product/Product.jsx",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Navbar/Navbar.jsx",["88","89"],"import React from 'react'\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core'\nimport { ShoppingCart } from '@material-ui/icons'\nimport { Link, useLocation } from 'react-router-dom'\n\nimport logo from '../../assets/commerce.png'\nimport useStyles from './styles'\n\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles()\n    const location = useLocation();\n\n    return (\n        <>\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n                <Toolbar>\n                    <Typography component={Link} to=\"/\" varian=\"h6\" className={classes.title} color=\"inherit\">\n                        <img src={logo} alt=\"General 3D\" height=\"25px\" className={classes.image} />\n                        General 3D\n                    </Typography>\n                    <div className={classes.grow}/>\n                    { location.pathname === '/' && ( \n                    /* Only in home page I am going to available to see the cart */\n                    <div className={classes.button}>\n                        { /* <Link to=\"/cart\"> Ir al carrito </Link> */ }\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Ver items del carrito\" color=\"inherit\">\n                            <Badge badgeContent={totalItems} color=\"secondary\">\n                                <ShoppingCart />\n                            </Badge>\n                        </IconButton>\n                    </div>) }\n                </Toolbar>\n            </AppBar>   \n        </>\n    )\n}\n\nexport default Navbar\n","/home/alejandro/ecommerces-react/tumercial/src/components/Navbar/styles.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/index.js",[],"/home/alejandro/ecommerces-react/tumercial/src/lib/commerce.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Cart/Cart.jsx",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Cart/styles.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Products/Product/styles.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Products/styles.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Cart/CartItem/CartItem.jsx",[],"/home/alejandro/ecommerces-react/tumercial/src/components/Cart/CartItem/styles.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/Checkout/Checkout.jsx",["90","91","92"],"/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/Checkout/styles.js",[],"/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/AddressForm.jsx",["93","94"],"import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\nimport { useForm, FormProvider } from 'react-hook-form'\nimport FormInput from './FormInput'\nimport { Link } from 'react-router-dom'\n\nimport { commerce } from '../../lib/commerce'\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const [shippingCountry, setShippingCountry] = useState('')\n    const [shippingCountries, setShippingCountries] = useState([])\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([])\n    const [shippingSubdivision, setShippingSubdivision] = useState('')\n    const [shippingOptions, setShippingOptions] = useState([])\n    const [shippingOption, setShippingOption] = useState('')\n\n    const methods = useForm();\n    \n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name}));\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name}));\n    const options = shippingOptions.map( (so) => ({ id: so.id, label: `${so.description} - (${so.price.formatted_with_symbol})`}))\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0])\n    }\n\n    const fetchSubdivision = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode)\n        setShippingSubdivisions(subdivisions)\n        setShippingSubdivision(Object.keys(subdivisions)[0])\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region=null) => {\n        const  options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    }\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id)\n    }, [])\n\n    useEffect(() => {\n        if (shippingCountry) fetchSubdivision(shippingCountry);\n    }, [shippingCountry]) \n    /* when shipping country change, it should fetch subdivisions */\n\n    useEffect(() => {\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision])\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterButton> Direccion de entrega </Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({...data, shippingCountry, shippingSubdivision, shippingOption}))}>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='Nombre'/>\n                        <FormInput required name='lastName' label='Apellido'/>\n                        <FormInput required name='addressOne' label='Direccion'/>\n                        <FormInput required name='email' label='Correo electronico'/>\n                        <FormInput required name='city' label='Ciudad'/>\n                        <FormInput required name='zip' label='Codigo postal'/>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel> Pais destino </InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                { countries.map( (country) => (\n                                    <MenuItem key={country.id} value={country.id}> {country.label} </MenuItem>\n                                ))}\n                                \n                            </Select>\n                        </Grid>\n                       <Grid item xs={12} sm={6}>\n                            <InputLabel> Subdivicion entrega </InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                { subdivisions.map( (subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}> {subdivision.label} </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel> Opciones de entrega </InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                { options.map( (option) => (\n                                    <MenuItem key={option.id} value={option.id}> {option.label} </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    < br/>\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                        <Button component={Link} to=\"/cart\" varian=\"outlined\"> Volver al carrito </Button>\n                        <Button type=\"submit\" varian=\"outlined\" color=\"primary\"> Siguiente </Button>\n\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/PaymentForm.jsx",[],"/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/FormInput.jsx",["95"],"import React from 'react'\nimport { TextField, Grid } from '@material-ui/core'\nimport { useFormContext, Controller } from 'react-hook-form'\n\nconst FormInput = ({ control, name, label, required }) => {\n    return (\n        <Grid item xs={12} sm={6}>\n            <Controller as ={TextField}\n                control={control}\n                fullWidth\n                name = {name}\n                label={label}\n                required={required}\n            />\n        </Grid>\n    )\n}\n\nexport default FormInput\n","/home/alejandro/ecommerces-react/tumercial/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":46,"nodeType":"102","messageId":"103","endLine":2,"endColumn":54},{"ruleId":"100","severity":1,"message":"104","line":2,"column":56,"nodeType":"102","messageId":"103","endLine":2,"endColumn":60},{"ruleId":"100","severity":1,"message":"105","line":2,"column":55,"nodeType":"102","messageId":"103","endLine":2,"endColumn":71},{"ruleId":"100","severity":1,"message":"106","line":2,"column":73,"nodeType":"102","messageId":"103","endLine":2,"endColumn":80},{"ruleId":"100","severity":1,"message":"107","line":2,"column":82,"nodeType":"102","messageId":"103","endLine":2,"endColumn":88},{"ruleId":"108","severity":1,"message":"109","line":43,"column":8,"nodeType":"110","endLine":43,"endColumn":10,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":52,"column":8,"nodeType":"110","endLine":52,"endColumn":29,"suggestions":"113"},{"ruleId":"100","severity":1,"message":"114","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":24},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["118"],"'useFormContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"123","text":"124"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"125","text":"126"},[2042,2044],"[checkoutToken.id]",[2369,2390],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]